{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./shared/getMinMax.js","webpack://[name]/./shared/decoders/decodeJPEGLS.js","webpack://[name]/./shared/decoders/decodeJPEG2000.js","webpack://[name]/./version.js","webpack://[name]/./shared/calculateMinMax.js","webpack://[name]/./shared/decoders/decodeLittleEndian.js","webpack://[name]/./shared/decoders/decodeBigEndian.js","webpack://[name]/./shared/decoders/decodeRLE.js","webpack://[name]/./shared/decoders/decodeJPEGBaseline.js","webpack://[name]/./shared/decoders/decodeJPEGLossless.js","webpack://[name]/./shared/decodeImageFrame.js","webpack://[name]/./webWorker/webWorker.js","webpack://[name]/./webWorker/decodeTask/decodeTask.js","webpack://[name]/./webWorker/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","m","getMinMax","storedPixelData","storedPixel","min","max","numPixels","length","index","Math","charLS","initializeJPEGLS","CharLS","Error","_jpegls_decode","decodeJPEGLS","imageFrame","pixelData","image","data","isSigned","dataPtr","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","result","ccall","width","getValue","height","bitsPerSample","stride","components","allowedLossyError","interleaveMode","undefined","imagePtr","Uint8Array","set","HEAP8","buffer","Int16Array","HEAP16","Uint16Array","_free","jpegLSDecode","pixelRepresentation","columns","rows","openJPEG","decodeOpenJpeg2000","bytesPerPixel","signed","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","Date","getTime","console","log","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","from","i","t1","decodeOpenJPEG","bitsAllocated","photometricInterpretation","initializeJPEG2000","decodeConfig","usePDFJS","OpenJPEG","_jp2_decode","decodeJPEG2000","options","jpxImage","JpxImage","parse","tileCount","tiles","items","decodeJpx","calculateMinMax","strict","minMax","mustAssign","isNumber","smallestPixelValue","largestPixelValue","warn","numValue","decodeLittleEndian","arrayBuffer","offset","byteOffset","slice","Float32Array","decodeBigEndian","val","decodeRLE","planarConfiguration","frameData","frameSize","outFrame","ArrayBuffer","samplesPerPixel","header","DataView","Int8Array","out","outIndex","numSegments","getInt32","s","inIndex","maxIndex","endOfSegment","n","value","j","decode8Planar","decode8","highByte","decode16","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","decodeJPEGLossless","lossless","Decoder","byteOutput","decompressedData","decode","decodeImageFrame","transferSyntax","start","shouldShift","shift","bitsStored","end","decodeTimeInMS","config","taskHandlers","initialized","registerTaskHandler","taskHandler","taskType","initialize","taskConfiguration","self","onmessage","msg","handler","transferList","postMessage","status","workerIndex","importScripts","sourcePath","loadWebWorkerTask","webWorkerTaskPaths","Object","keys","forEach","key","codecsLoaded","loadCodecs","decodeTask","codecsPath","initializeCodecsOnStartup","doneCallback","loadCodecsOnStartup","cornerstoneWADOImageLoaderWebWorker","version","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","object","property","prototype","hasOwnProperty","call","p","moduleId","l","modules"],"mappings":"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","file":"cornerstoneWADOImageLoaderWebWorker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoaderWebWorker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoaderWebWorker\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/**\r\n * Calculate the minimum and maximum values in an Array\r\n *\r\n * @param {Number[]} storedPixelData\r\n * @return {{min: Number, max: Number}}\r\n */\r\nfunction getMinMax (storedPixelData) {\r\n  // we always calculate the min max values since they are not always\r\n  // present in DICOM and we don't want to trust them anyway as cornerstone\r\n  // depends on us providing reliable values for these\r\n  let min = storedPixelData[0];\r\n  let max = storedPixelData[0];\r\n  let storedPixel;\r\n  const numPixels = storedPixelData.length;\r\n\r\n  for (let index = 1; index < numPixels; index++) {\r\n    storedPixel = storedPixelData[index];\r\n    min = Math.min(min, storedPixel);\r\n    max = Math.max(max, storedPixel);\r\n  }\r\n\r\n  return {\r\n    min,\r\n    max\r\n  };\r\n}\r\n\r\nexport default getMinMax;\r\n","let charLS;\r\n\r\nfunction jpegLSDecode (data, isSigned) {\r\n  // prepare input parameters\r\n  const dataPtr = charLS._malloc(data.length);\r\n\r\n  charLS.writeArrayToMemory(data, dataPtr);\r\n\r\n  // prepare output parameters\r\n  const imagePtrPtr = charLS._malloc(4);\r\n  const imageSizePtr = charLS._malloc(4);\r\n  const widthPtr = charLS._malloc(4);\r\n  const heightPtr = charLS._malloc(4);\r\n  const bitsPerSamplePtr = charLS._malloc(4);\r\n  const stridePtr = charLS._malloc(4);\r\n  const allowedLossyErrorPtr = charLS._malloc(4);\r\n  const componentsPtr = charLS._malloc(4);\r\n  const interleaveModePtr = charLS._malloc(4);\r\n\r\n  // Decode the image\r\n  const result = charLS.ccall(\r\n    'jpegls_decode',\r\n    'number',\r\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\r\n  );\r\n\r\n  // Extract result values into object\r\n  const image = {\r\n    result,\r\n    width: charLS.getValue(widthPtr, 'i32'),\r\n    height: charLS.getValue(heightPtr, 'i32'),\r\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\r\n    stride: charLS.getValue(stridePtr, 'i32'),\r\n    components: charLS.getValue(componentsPtr, 'i32'),\r\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\r\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\r\n    pixelData: undefined\r\n  };\r\n\r\n  // Copy image from emscripten heap into appropriate array buffer type\r\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\r\n\r\n  if (image.bitsPerSample <= 8) {\r\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\r\n  } else if (isSigned) {\r\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\r\n  } else {\r\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\r\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\r\n  }\r\n\r\n  // free memory and return image object\r\n  charLS._free(dataPtr);\r\n  charLS._free(imagePtr);\r\n  charLS._free(imagePtrPtr);\r\n  charLS._free(imageSizePtr);\r\n  charLS._free(widthPtr);\r\n  charLS._free(heightPtr);\r\n  charLS._free(bitsPerSamplePtr);\r\n  charLS._free(stridePtr);\r\n  charLS._free(componentsPtr);\r\n  charLS._free(interleaveModePtr);\r\n\r\n  return image;\r\n}\r\n\r\nfunction initializeJPEGLS () {\r\n  // check to make sure codec is loaded\r\n  if (typeof CharLS === 'undefined') {\r\n    throw new Error('No JPEG-LS decoder loaded');\r\n  }\r\n\r\n  // Try to initialize CharLS\r\n  // CharLS https://github.com/cornerstonejs/charls\r\n  if (!charLS) {\r\n    charLS = CharLS();\r\n    if (!charLS || !charLS._jpegls_decode) {\r\n      throw new Error('JPEG-LS failed to initialize');\r\n    }\r\n  }\r\n\r\n}\r\n\r\nfunction decodeJPEGLS (imageFrame, pixelData) {\r\n  initializeJPEGLS();\r\n\r\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\r\n\r\n  // throw error if not success or too much data\r\n  if (image.result !== 0 && image.result !== 6) {\r\n    throw new Error(`JPEG-LS decoder failed to decode frame (error code ${image.result})`);\r\n  }\r\n\r\n  imageFrame.columns = image.width;\r\n  imageFrame.rows = image.height;\r\n  imageFrame.pixelData = image.pixelData;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeJPEGLS;\r\nexport { initializeJPEGLS };\r\n","function decodeJpx (imageFrame, pixelData) {\r\n  const jpxImage = new JpxImage();\r\n\r\n  jpxImage.parse(pixelData);\r\n\r\n  const tileCount = jpxImage.tiles.length;\r\n\r\n  if (tileCount !== 1) {\r\n    throw new Error(`JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`);\r\n  }\r\n\r\n  imageFrame.columns = jpxImage.width;\r\n  imageFrame.rows = jpxImage.height;\r\n  imageFrame.pixelData = jpxImage.tiles[0].items;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nlet openJPEG;\r\n\r\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\r\n  const dataPtr = openJPEG._malloc(data.length);\r\n\r\n  openJPEG.writeArrayToMemory(data, dataPtr);\r\n\r\n  // create param outpout\r\n  const imagePtrPtr = openJPEG._malloc(4);\r\n  const imageSizePtr = openJPEG._malloc(4);\r\n  const imageSizeXPtr = openJPEG._malloc(4);\r\n  const imageSizeYPtr = openJPEG._malloc(4);\r\n  const imageSizeCompPtr = openJPEG._malloc(4);\r\n\r\n  const t0 = new Date().getTime();\r\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\r\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\r\n  // add num vomp..etc\r\n\r\n  if (ret !== 0) {\r\n    console.log('[opj_decode] decoding failed!');\r\n    openJPEG._free(dataPtr);\r\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\r\n    openJPEG._free(imageSizeXPtr);\r\n    openJPEG._free(imageSizeYPtr);\r\n    openJPEG._free(imageSizePtr);\r\n    openJPEG._free(imageSizeCompPtr);\r\n\r\n    return;\r\n  }\r\n\r\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\r\n\r\n  const image = {\r\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\r\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\r\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\r\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\r\n    perf_timetodecode: undefined,\r\n    pixelData: undefined\r\n  };\r\n\r\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\r\n  const length = image.sx * image.sy * image.nbChannels;\r\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\r\n\r\n  if (bytesPerPixel === 1) {\r\n    if (Uint8Array.from) {\r\n      image.pixelData = Uint8Array.from(src32);\r\n    } else {\r\n      image.pixelData = new Uint8Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        image.pixelData[i] = src32[i];\r\n      }\r\n    }\r\n  } else if (signed) {\r\n    if (Int16Array.from) {\r\n      image.pixelData = Int16Array.from(src32);\r\n    } else {\r\n      image.pixelData = new Int16Array(length);\r\n      for (let i = 0; i < length; i++) {\r\n        image.pixelData[i] = src32[i];\r\n      }\r\n    }\r\n  } else if (Uint16Array.from) {\r\n    image.pixelData = Uint16Array.from(src32);\r\n  } else {\r\n    image.pixelData = new Uint16Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n      image.pixelData[i] = src32[i];\r\n    }\r\n  }\r\n\r\n  const t1 = new Date().getTime();\r\n\r\n  image.perf_timetodecode = t1 - t0;\r\n\r\n  // free\r\n  openJPEG._free(dataPtr);\r\n  openJPEG._free(imagePtrPtr);\r\n  openJPEG._free(imagePtr);\r\n  openJPEG._free(imageSizePtr);\r\n  openJPEG._free(imageSizeXPtr);\r\n  openJPEG._free(imageSizeYPtr);\r\n  openJPEG._free(imageSizeCompPtr);\r\n\r\n  return image;\r\n}\r\n\r\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\r\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\r\n  const signed = imageFrame.pixelRepresentation === 1;\r\n\r\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\r\n\r\n  imageFrame.columns = image.sx;\r\n  imageFrame.rows = image.sy;\r\n  imageFrame.pixelData = image.pixelData;\r\n  if (image.nbChannels > 1) {\r\n    imageFrame.photometricInterpretation = 'RGB';\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nfunction initializeJPEG2000 (decodeConfig) {\r\n  // check to make sure codec is loaded\r\n  if (!decodeConfig.usePDFJS) {\r\n    if (typeof OpenJPEG === 'undefined') {\r\n      throw new Error('OpenJPEG decoder not loaded');\r\n    }\r\n  }\r\n\r\n  if (!openJPEG) {\r\n    openJPEG = OpenJPEG();\r\n    if (!openJPEG || !openJPEG._jp2_decode) {\r\n      throw new Error('OpenJPEG failed to initialize');\r\n    }\r\n  }\r\n}\r\n\r\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\r\n  initializeJPEG2000(decodeConfig);\r\n\r\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\r\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\r\n    // console.log('PDFJS')\r\n    return decodeJpx(imageFrame, pixelData);\r\n  }\r\n\r\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\r\n  // console.log('OpenJPEG')\r\n  return decodeOpenJpeg2000(imageFrame, pixelData);\r\n}\r\n\r\nexport default decodeJPEG2000;\r\nexport { initializeJPEG2000 };\r\n","export default '2.2.3';\n","import getMinMax from './getMinMax.js';\r\n\r\n/**\r\n * Check the minimum and maximum values in the imageFrame pixel data\r\n * match with the provided smallestPixelValue and largestPixelValue metaData.\r\n *\r\n * If 'strict' is true, log to the console a warning if these values do not match.\r\n * Otherwise, correct them automatically.\r\n *\r\n * @param {Object} imageFrame\r\n * @param {Boolean} strict If 'strict' is true, log to the console a warning if these values do not match.\r\n * Otherwise, correct them automatically.Default is true.\r\n */\r\nexport default function calculateMinMax (imageFrame, strict = true) {\r\n  const minMax = getMinMax(imageFrame.pixelData);\r\n  const mustAssign = !(isNumber(imageFrame.smallestPixelValue) && isNumber(imageFrame.largestPixelValue));\r\n\r\n\r\n  if (strict === true && !mustAssign) {\r\n    if (imageFrame.smallestPixelValue !== minMax.min) {\r\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\r\n    }\r\n\r\n    if (imageFrame.largestPixelValue !== minMax.max) {\r\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\r\n    }\r\n  } else {\r\n    imageFrame.smallestPixelValue = minMax.min;\r\n    imageFrame.largestPixelValue = minMax.max;\r\n  }\r\n}\r\n\r\nfunction isNumber (numValue) {\r\n  return typeof numValue === 'number';\r\n}\r\n","function decodeLittleEndian (imageFrame, pixelData) {\r\n  let arrayBuffer = pixelData.buffer;\r\n  let offset = pixelData.byteOffset;\r\n  const length = pixelData.length;\r\n\r\n  if (imageFrame.bitsAllocated === 16) {\r\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\r\n    // buffers on it\r\n    if (offset % 2) {\r\n      arrayBuffer = arrayBuffer.slice(offset);\r\n      offset = 0;\r\n    }\r\n\r\n    if (imageFrame.pixelRepresentation === 0) {\r\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\r\n    } else {\r\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\r\n    }\r\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\r\n    imageFrame.pixelData = pixelData;\r\n  } else if (imageFrame.bitsAllocated === 32) {\r\n    // if pixel data is not aligned on even boundary, shift it\r\n    if (offset % 2) {\r\n      arrayBuffer = arrayBuffer.slice(offset);\r\n      offset = 0;\r\n    }\r\n\r\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeLittleEndian;\r\n","/* eslint no-bitwise: 0 */\r\nfunction swap16 (val) {\r\n  return ((val & 0xFF) << 8) |\r\n    ((val >> 8) & 0xFF);\r\n}\r\n\r\n\r\nfunction decodeBigEndian (imageFrame, pixelData) {\r\n  if (imageFrame.bitsAllocated === 16) {\r\n    let arrayBuffer = pixelData.buffer;\r\n    let offset = pixelData.byteOffset;\r\n    const length = pixelData.length;\r\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\r\n    // buffers on it\r\n\r\n    if (offset % 2) {\r\n      arrayBuffer = arrayBuffer.slice(offset);\r\n      offset = 0;\r\n    }\r\n\r\n    if (imageFrame.pixelRepresentation === 0) {\r\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\r\n    } else {\r\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\r\n    }\r\n    // Do the byte swap\r\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\r\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\r\n    }\r\n\r\n  } else if (imageFrame.bitsAllocated === 8) {\r\n    imageFrame.pixelData = pixelData;\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeBigEndian;\r\n","function decodeRLE (imageFrame, pixelData) {\r\n  if (imageFrame.bitsAllocated === 8) {\r\n    if (imageFrame.planarConfiguration) {\r\n      return decode8Planar(imageFrame, pixelData);\r\n    }\r\n\r\n    return decode8(imageFrame, pixelData);\r\n  } else if (imageFrame.bitsAllocated === 16) {\r\n    return decode16(imageFrame, pixelData);\r\n  }\r\n\r\n  throw new Error('unsupported pixel format for RLE');\r\n}\r\n\r\nfunction decode8 (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  let outIndex = 0;\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    outIndex = s;\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    const endOfSegment = frameSize * numSegments;\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        // copy n bytes\r\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\r\n          out[outIndex] = data[inIndex++];\r\n          outIndex += imageFrame.samplesPerPixel;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n        // run of n bytes\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\r\n          out[outIndex] = value;\r\n          outIndex += imageFrame.samplesPerPixel;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  imageFrame.pixelData = new Uint8Array(outFrame);\r\n\r\n  return imageFrame;\r\n}\r\n\r\nfunction decode8Planar (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  let outIndex = 0;\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    outIndex = s * frameSize;\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    const endOfSegment = frameSize * numSegments;\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        // copy n bytes\r\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\r\n          out[outIndex] = data[inIndex++];\r\n          outIndex++;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n        // run of n bytes\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\r\n          out[outIndex] = value;\r\n          outIndex++;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  imageFrame.pixelData = new Uint8Array(outFrame);\r\n\r\n  return imageFrame;\r\n}\r\n\r\nfunction decode16 (imageFrame, pixelData) {\r\n  const frameData = pixelData;\r\n  const frameSize = imageFrame.rows * imageFrame.columns;\r\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\r\n\r\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\r\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\r\n  const out = new Int8Array(outFrame);\r\n\r\n  const numSegments = header.getInt32(0, true);\r\n\r\n  for (let s = 0; s < numSegments; ++s) {\r\n    let outIndex = 0;\r\n    const highByte = (s === 0 ? 1 : 0);\r\n\r\n    let inIndex = header.getInt32((s + 1) * 4, true);\r\n    let maxIndex = header.getInt32((s + 2) * 4, true);\r\n\r\n    if (maxIndex === 0) {\r\n      maxIndex = frameData.length;\r\n    }\r\n\r\n    while (inIndex < maxIndex) {\r\n      const n = data[inIndex++];\r\n\r\n      if (n >= 0 && n <= 127) {\r\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\r\n          out[(outIndex * 2) + highByte] = data[inIndex++];\r\n          outIndex++;\r\n        }\r\n      } else if (n <= -1 && n >= -127) {\r\n        const value = data[inIndex++];\r\n\r\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\r\n          out[(outIndex * 2) + highByte] = value;\r\n          outIndex++;\r\n        }\r\n      }/* else if (n === -128) {\r\n\r\n      } // do nothing */\r\n    }\r\n  }\r\n  if (imageFrame.pixelRepresentation === 0) {\r\n    imageFrame.pixelData = new Uint16Array(outFrame);\r\n  } else {\r\n    imageFrame.pixelData = new Int16Array(outFrame);\r\n  }\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeRLE;\r\n","\r\n\r\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\r\n  // check to make sure codec is loaded\r\n  if (typeof JpegImage === 'undefined') {\r\n    throw new Error('No JPEG Baseline decoder loaded');\r\n  }\r\n  const jpeg = new JpegImage();\r\n\r\n  jpeg.parse(pixelData);\r\n\r\n  // Do not use the internal jpeg.js color transformation,\r\n  // since we will handle this afterwards\r\n  jpeg.colorTransform = false;\r\n\r\n  if (imageFrame.bitsAllocated === 8) {\r\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\r\n\r\n    return imageFrame;\r\n  } else if (imageFrame.bitsAllocated === 16) {\r\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\r\n\r\n    return imageFrame;\r\n  }\r\n}\r\n\r\nexport default decodeJPEGBaseline;\r\n","\r\n\r\nfunction decodeJPEGLossless (imageFrame, pixelData) {\r\n  // check to make sure codec is loaded\r\n  if (typeof jpeg === 'undefined' ||\r\n    typeof jpeg.lossless === 'undefined' ||\r\n    typeof jpeg.lossless.Decoder === 'undefined') {\r\n    throw new Error('No JPEG Lossless decoder loaded');\r\n  }\r\n\r\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\r\n  // console.time('jpeglossless');\r\n  const buffer = pixelData.buffer;\r\n  const decoder = new jpeg.lossless.Decoder();\r\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\r\n  // console.timeEnd('jpeglossless');\r\n\r\n  if (imageFrame.pixelRepresentation === 0) {\r\n    if (imageFrame.bitsAllocated === 16) {\r\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\r\n\r\n      return imageFrame;\r\n    }\r\n    // untested!\r\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\r\n\r\n    return imageFrame;\r\n\r\n  }\r\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\r\n\r\n  return imageFrame;\r\n\r\n}\r\n\r\nexport default decodeJPEGLossless;\r\n","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\r\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\r\nimport decodeRLE from './decoders/decodeRLE.js';\r\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\r\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\r\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\r\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\r\n\r\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\r\n  const start = new Date().getTime();\r\n\r\n  if (transferSyntax === '1.2.840.10008.1.2') {\r\n    // Implicit VR Little Endian\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\r\n    // Explicit VR Little Endian\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\r\n    // Explicit VR Big Endian (retired)\r\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\r\n    // Deflate transfer syntax (deflated by dicomParser)\r\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\r\n    // RLE Lossless\r\n    imageFrame = decodeRLE(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\r\n    // JPEG Baseline lossy process 1 (8 bit)\r\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\r\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\r\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\r\n    // JPEG Lossless, Nonhierarchical (Processes 14)\r\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\r\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\r\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\r\n    // JPEG-LS Lossless Image Compression\r\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\r\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\r\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\r\n    // JPEG 2000 Lossless\r\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\r\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\r\n    // JPEG 2000 Lossy\r\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\r\n  } else {\r\n    throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\r\n  }\r\n\r\n  /* Don't know if these work...\r\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\r\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\r\n   {\r\n   return decodeJPEG2000(dataSet, frame);\r\n   }\r\n   // JPEG 2000 Part 2 Multicomponent Image Compression\r\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\r\n   {\r\n   return decodeJPEG2000(dataSet, frame);\r\n   }\r\n   */\r\n\r\n  const shouldShift = imageFrame.pixelRepresentation !== undefined && imageFrame.pixelRepresentation === 1;\r\n  const shift = (shouldShift && imageFrame.bitsStored !== undefined) ? (32 - imageFrame.bitsStored) : undefined;\r\n\r\n  if (shouldShift && shift !== undefined) {\r\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\r\n      // eslint-disable-next-line no-bitwise\r\n      imageFrame.pixelData[i] = (imageFrame.pixelData[i] << shift >> shift);\r\n    }\r\n  }\r\n\r\n  const end = new Date().getTime();\r\n\r\n  imageFrame.decodeTimeInMS = end - start;\r\n\r\n  return imageFrame;\r\n}\r\n\r\nexport default decodeImageFrame;\r\n","// an object of task handlers\r\nconst taskHandlers = {};\r\n\r\n// Flag to ensure web worker is only initialized once\r\nlet initialized = false;\r\n\r\n// the configuration object passed in when the web worker manager is initialized\r\nlet config;\r\n\r\n/**\r\n * Initialization function that loads additional web workers and initializes them\r\n * @param data\r\n */\r\nfunction initialize (data) {\r\n  // console.log('web worker initialize ', data.workerIndex);\r\n  // prevent initialization from happening more than once\r\n  if (initialized) {\r\n    return;\r\n  }\r\n\r\n  // save the config data\r\n  config = data.config;\r\n\r\n  // load any additional web worker tasks\r\n  if (data.config.webWorkerTaskPaths) {\r\n    for (let i = 0; i < data.config.webWorkerTaskPaths.length; i++) {\r\n      self.importScripts(data.config.webWorkerTaskPaths[i]);\r\n    }\r\n  }\r\n\r\n  // initialize each task handler\r\n  Object.keys(taskHandlers).forEach(function (key) {\r\n    taskHandlers[key].initialize(config.taskConfiguration);\r\n  });\r\n\r\n  // tell main ui thread that we have completed initialization\r\n  self.postMessage({\r\n    taskType: 'initialize',\r\n    status: 'success',\r\n    result: {\r\n    },\r\n    workerIndex: data.workerIndex\r\n  });\r\n\r\n  initialized = true;\r\n}\r\n\r\n/**\r\n * Function exposed to web worker tasks to register themselves\r\n * @param taskHandler\r\n */\r\nexport function registerTaskHandler (taskHandler) {\r\n  if (taskHandlers[taskHandler.taskType]) {\r\n    console.log('attempt to register duplicate task handler \"', taskHandler.taskType, '\"');\r\n\r\n    return false;\r\n  }\r\n  taskHandlers[taskHandler.taskType] = taskHandler;\r\n  if (initialized) {\r\n    taskHandler.initialize(config.taskConfiguration);\r\n  }\r\n}\r\n\r\n/**\r\n * Function to load a new web worker task with updated configuration\r\n * @param data\r\n */\r\nfunction loadWebWorkerTask (data) {\r\n  config = data.config;\r\n  self.importScripts(data.sourcePath);\r\n}\r\n\r\n/**\r\n * Web worker message handler - dispatches messages to the registered task handlers\r\n * @param msg\r\n */\r\nself.onmessage = function (msg) {\r\n  // console.log('web worker onmessage', msg.data);\r\n\r\n  // handle initialize message\r\n  if (msg.data.taskType === 'initialize') {\r\n    initialize(msg.data);\r\n\r\n    return;\r\n  }\r\n\r\n  // handle loadWebWorkerTask message\r\n  if (msg.data.taskType === 'loadWebWorkerTask') {\r\n    loadWebWorkerTask(msg.data);\r\n\r\n    return;\r\n  }\r\n\r\n  // dispatch the message if there is a handler registered for it\r\n  if (taskHandlers[msg.data.taskType]) {\r\n    taskHandlers[msg.data.taskType].handler(msg.data, function (result, transferList) {\r\n      self.postMessage({\r\n        taskType: msg.data.taskType,\r\n        status: 'success',\r\n        result,\r\n        workerIndex: msg.data.workerIndex\r\n      }, transferList);\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  // not task handler registered - send a failure message back to ui thread\r\n  console.log('no task handler for ', msg.data.taskType);\r\n  console.log(taskHandlers);\r\n  self.postMessage({\r\n    taskType: msg.data.taskType,\r\n    status: 'failed - no task handler registered',\r\n    workerIndex: msg.data.workerIndex\r\n  });\r\n};\r\n","import { initializeJPEG2000 } from '../../shared/decoders/decodeJPEG2000.js';\r\nimport { initializeJPEGLS } from '../../shared/decoders/decodeJPEGLS.js';\r\nimport calculateMinMax from '../../shared/calculateMinMax.js';\r\nimport decodeImageFrame from '../../shared/decodeImageFrame.js';\r\n\r\n// flag to ensure codecs are loaded only once\r\nlet codecsLoaded = false;\r\n\r\n// the configuration object for the decodeTask\r\nlet decodeConfig;\r\n\r\n/**\r\n * Function to control loading and initializing the codecs\r\n * @param config\r\n */\r\nfunction loadCodecs (config) {\r\n  // prevent loading codecs more than once\r\n  if (codecsLoaded) {\r\n    return;\r\n  }\r\n\r\n  // Load the codecs\r\n  // console.time('loadCodecs');\r\n  self.importScripts(config.decodeTask.codecsPath);\r\n  codecsLoaded = true;\r\n  // console.timeEnd('loadCodecs');\r\n\r\n  // Initialize the codecs\r\n  if (config.decodeTask.initializeCodecsOnStartup) {\r\n    // console.time('initializeCodecs');\r\n    initializeJPEG2000(config.decodeTask);\r\n    initializeJPEGLS(config.decodeTask);\r\n    // console.timeEnd('initializeCodecs');\r\n  }\r\n}\r\n\r\n/**\r\n * Task initialization function\r\n */\r\nfunction initialize (config) {\r\n  decodeConfig = config;\r\n  if (config.decodeTask.loadCodecsOnStartup) {\r\n    loadCodecs(config);\r\n  }\r\n}\r\n\r\n/**\r\n * Task handler function\r\n */\r\nfunction handler (data, doneCallback) {\r\n  // Load the codecs if they aren't already loaded\r\n  loadCodecs(decodeConfig);\r\n\r\n  const strict = decodeConfig && decodeConfig.decodeTask && decodeConfig.decodeTask.strict;\r\n  const imageFrame = data.data.imageFrame;\r\n\r\n  // convert pixel data from ArrayBuffer to Uint8Array since web workers support passing ArrayBuffers but\r\n  // not typed arrays\r\n  const pixelData = new Uint8Array(data.data.pixelData);\r\n\r\n  decodeImageFrame(\r\n    imageFrame,\r\n    data.data.transferSyntax,\r\n    pixelData,\r\n    decodeConfig.decodeTask,\r\n    data.data.options);\r\n\r\n  if (!imageFrame.pixelData) {\r\n    throw new Error('decodeTask: imageFrame.pixelData is undefined after decoding');\r\n  }\r\n\r\n  calculateMinMax(imageFrame, strict);\r\n\r\n  // convert from TypedArray to ArrayBuffer since web workers support passing ArrayBuffers but not\r\n  // typed arrays\r\n  imageFrame.pixelData = imageFrame.pixelData.buffer;\r\n\r\n  // invoke the callback with our result and pass the pixelData in the transferList to move it to\r\n  // UI thread without making a copy\r\n  doneCallback(imageFrame, [imageFrame.pixelData]);\r\n}\r\n\r\nexport default {\r\n  taskType: 'decodeTask',\r\n  handler,\r\n  initialize\r\n};\r\n","import { registerTaskHandler } from './webWorker.js';\r\nimport decodeTask from './decodeTask/decodeTask.js';\r\nimport { default as version } from '../version.js';\r\n\r\n// register our task\r\nregisterTaskHandler(decodeTask);\r\n\r\nconst cornerstoneWADOImageLoaderWebWorker = {\r\n  registerTaskHandler,\r\n  version\r\n};\r\n\r\nexport {\r\n  registerTaskHandler,\r\n  version\r\n};\r\n\r\nexport default cornerstoneWADOImageLoaderWebWorker;\r\n"],"sourceRoot":""}